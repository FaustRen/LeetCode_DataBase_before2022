

## 207. Sales Person

### Problem

A salesperson has a number of cities to visit, and wants to optimize their route to hit all the cities and return to their starting point.

Given a list of cities and the distances between each pair of cities, what is the shortest possible route that visits each city and returns to the origin city?

### Input

The input to the function/method consists of three arguments:

- `numCities`, an integer representing the number of cities.
- `cities`, a list of pairs of integers where the first integer represents the cities number (between 0 to `numCities-1`) and the second integer represents the distance between the two cities.
- `origin`, an integer representing the starting city.

### Output

Return an integer, representing the shortest possible route.

### Example 1

#### Input

```
numCities = 4
cities = [[0,1],[2,3],[1,2]]
origin = 0
```

#### Output

```
4
```

#### Explanation

The shortest route is 0 -> 1 -> 2 -> 3 -> 0, which has a total distance of 4.

### Example 2

#### Input

```
numCities = 5
cities = [[0,1],[2,3],[3,4]]
origin = 0
```

#### Output

```
6
```

#### Explanation

The shortest route is 0 -> 1 -> 2 -> 3 -> 4 -> 0, which has a total distance of 6.

SELECT
    s.name
FROM
    Salesperson s
WHERE
    NOT EXISTS (SELECT
            *
        FROM
            Orders o
        WHERE
            o.salesperson_id = s.salesperson_id
        HAVING
            COUNT(*) = 0)